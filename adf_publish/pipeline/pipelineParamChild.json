{
	"name": "pipelineParamChild",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "pipelineId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "source_filename",
								"value": "$$FILENAME"
							}
						],
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"wildcardFolderPath": {
								"value": "@pipeline().parameters.sourceFolderName",
								"type": "Expression"
							},
							"wildcardFileName": {
								"value": "@pipeline().parameters.sourceFileName",
								"type": "Expression"
							},
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": false,
					"translator": {
						"value": "@json(pipeline().parameters.copyMapping)",
						"type": "Expression"
					}
				},
				"inputs": [
					{
						"referenceName": "DelimitedTextChildSource",
						"type": "DatasetReference",
						"parameters": {
							"sourceContainerName": {
								"value": "@pipeline().parameters.sourceContainerName",
								"type": "Expression"
							},
							"sourceFolderName": {
								"value": "@pipeline().parameters.sourceFolderName",
								"type": "Expression"
							},
							"sourceFileName": {
								"value": "@pipeline().parameters.sourceFileName",
								"type": "Expression"
							},
							"sourceColumnDelimeter": {
								"value": "@pipeline().parameters.sourceColumnDelimeter",
								"type": "Expression"
							},
							"sourceEncoding": {
								"value": "@pipeline().parameters.sourceEncoding",
								"type": "Expression"
							},
							"sourceEscapeCharacter": {
								"value": "@pipeline().parameters.sourceEscapeCharacter",
								"type": "Expression"
							},
							"sourceQuoteCharacter": {
								"value": "@pipeline().parameters.sourceQuoteCharacter",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlTableForModule9",
						"type": "DatasetReference",
						"parameters": {
							"cw_table": {
								"value": "@pipeline().parameters.destinationTableName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Stored procedure1",
				"description": "loging",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[LogActivity]",
					"storedProcedureParameters": {
						"activityName": {
							"value": {
								"value": "copy activity",
								"type": "Expression"
							},
							"type": "String"
						},
						"billingDuration": {
							"value": {
								"value": "@activity('Copy data1').output.billingReference.totalBillableDuration",
								"type": "Expression"
							},
							"type": "String"
						},
						"copyDuration": {
							"value": {
								"value": "@activity('Copy data1').output.copyDuration",
								"type": "Expression"
							},
							"type": "String"
						},
						"diuNumber": {
							"value": {
								"value": "@activity('Copy data1').output.usedDataIntegrationUnits",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"endTime": {
							"value": {
								"value": "@activity('Copy data1').ExecutionEndTime",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"ErrorMessage": {
							"value": {
								"value": "@activity('Copy data1').Error",
								"type": "Expression"
							},
							"type": "String"
						},
						"filesNumber": {
							"value": {
								"value": "@activity('Copy data1').output.filesRead",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"parallelcopyNumber": {
							"value": {
								"value": "@activity('Copy data1').output.usedParallelCopies",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"pipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"rowNumber": {
							"value": {
								"value": "@activity('Copy data1').output.rowsRead",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"runId": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"startTime": {
							"value": {
								"value": "@activity('Copy data1').ExecutionStartTime",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"status": {
							"value": {
								"value": "@activity('Copy data1').Status",
								"type": "Expression"
							},
							"type": "String"
						},
						"transferDuration": {
							"value": {
								"value": "@activity('Copy data1').output.durationInQueue.integrationRuntimeQueue",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "linkedService1",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"sourceContainerName": {
				"type": "string"
			},
			"sourceFolderName": {
				"type": "string"
			},
			"sourceFileName": {
				"type": "string"
			},
			"sourceColumnDelimeter": {
				"type": "string"
			},
			"sourceEncoding": {
				"type": "string"
			},
			"sourceEscapeCharacter": {
				"type": "string"
			},
			"sourceQuoteCharacter": {
				"type": "string"
			},
			"destinationTableName": {
				"type": "string"
			},
			"destinationSchemaName": {
				"type": "string"
			},
			"copyMapping": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-02-16T15:21:14Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}